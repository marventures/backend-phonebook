{
  "openapi": "3.0.0",
  "info": {
    "title": "Phonebook",
    "version": "1.0.0",
    "description": "Phonebook REST API"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "AuthorizationHeader": {
        "name": "Authorization",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "format": "Bearer {token}"
        }
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": ["firstName", "lastName", "email"]
      }
    }
  },
  "paths": {
    "/api/users/signup": {
      "post": {
        "summary": "User signup",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "yourpassword"
                  }
                },
                "required": ["firstName", "lastName", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "subscription": {
                          "type": "string"
                        },
                        "avatarURL": {
                          "type": "string"
                        },
                        "verificationToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Validation error or missing required fields."
          },
          "409": {
            "description": "Conflict. Email already in use."
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "User login",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "yourpassword"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "subscription": {
                          "type": "string"
                        },
                        "avatarURL": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Validation error or missing required fields."
          },
          "401": {
            "description": "Unauthorized. Incorrect email or password."
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "summary": "User logout",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "summary": "Get current user",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "subscription": {
                          "type": "string"
                        },
                        "avatarURL": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          }
        }
      }
    },
    "/api/users/": {
      "patch": {
        "summary": "Update user subscription",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "string",
                    "enum": ["starter", "pro", "business"],
                    "example": "pro"
                  }
                },
                "required": ["subscription"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User subscription updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "subscription": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Validation error or missing required fields."
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          }
        }
      }
    },
    "/api/users/info": {
      "put": {
        "summary": "Update user information",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Updated First Name"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Updated Last Name"
                  },
                  "email": {
                    "type": "string",
                    "example": "newemail@example.com"
                  }
                },
                "required": ["firstName", "lastName", "email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "avatarURL": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Validation error or missing required fields."
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          },
          "409": {
            "description": "Conflict. Email already in use."
          }
        }
      }
    },
    "/api/users/verify/{verificationToken}": {
      "get": {
        "summary": "Verify email using verification token",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Verification token received in the email."
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "summary": "Resend email verification link",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@example.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or email already verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/contacts": {
      "get": {
        "summary": "Retrieve all contacts",
        "tags": ["Contacts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          }
        }
      },
      "post": {
        "summary": "Create a new contact",
        "tags": ["Contacts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Validation error or missing required fields."
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          }
        }
      }
    },
    "/api/contacts/{contactId}": {
      "get": {
        "summary": "Retrieve a contact by ID",
        "tags": ["Contacts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "put": {
        "summary": "Update a contact by ID",
        "tags": ["Contacts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Validation error or missing required fields."
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a contact by ID",
        "tags": ["Contacts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully"
          },
          "401": {
            "description": "Unauthorized. User not authenticated."
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    }
  }
}
